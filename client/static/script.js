class Token {kind;slice;constructor(kind, slice) {this.kind = kind;this.slice = slice;}modify(kind, slice) {this.kind = kind;this.slice = slice;}equals(kind, slice) {return this.kind === kind && this.slice === slice;}}const PATTERNS = [[/^\/\/.*/, "comment"],[/^\/\*[\s\S]*?\*\//, "comment"],[/^(\r?\n|\s+)/, "whitespace"],[/^\b(break|c(ase|han|on(st|tinue))|def(ault|er)|else|f(allthrough|or|unc)|go(to)?|i(f|mport|nterface)|map|package|r(ange|eturn)|s((ele|tru)ct|witch)|type|var)\b/, "keyword"],[/^\b(true|false)\b/, "boolean"],[/^\bnil\b/, "nil"],[/^\b[\p{L}_][\p{L}0-9_]*\b/u, "identifier"],[/^(\+\+|--|&&|\|\||<-|->|(<<|>>|&\^)=?|\.{3}|[\+\-\*\/%&\|^<>!:=]=?|[~\.,;()\[\]{}])/, "operator"],[/^`(.|\r?\n)*?`/, "string"],[/^"([^"\\\r\n]|\\([abfnrtv\\'"]|[0-7]{3}|x[0-9A-Fa-f]{2}|(u|U[0-9A-Fa-f]{4})[0-9A-Fa-f]{4}))*?"/, "string"],[/^'([^'\\\r\n]|\\([abfnrtv\\'"]|[0-7]{3}|x[0-9A-Fa-f]{2}|(u|U[0-9A-Fa-f]{4})[0-9A-Fa-f]{4}))'/, "string"],[/^(\d(_?\d)*(\.(\d(_?\d)*)?|(\.(\d(_?\d)*)?)?[eE][-+]\d(_?\d)*)|\.\d(_?\d)*([eE][-+]\d(_?\d)*)?)i?/, "number"],[/^0[xX](_?[0-9A-Fa-f](_?[0-9A-Fa-f])*(\.([0-9A-Fa-f](_?[0-9A-Fa-f])*)?)?|\.[0-9A-Fa-f](_?[0-9A-Fa-f])*)[pP][-+]?\d(_?\d)*i?/, "number"],[/^0[xX](_?[0-9A-Fa-f])*i?/, "number"],[/^0[bB](_?[01])*i?/, "number"],[/^0[oO]?(_?[0-7])*i?/, "number"],[/^(0|[1-9](_?[0-9])*)i?/, "number"],];function push(token_stream, new_token) {token_stream.push(new_token);return new_token.slice.length;}function lex(input) {const token_stream = [];let index = 0;outer: while (index < input.length) {for (let i = 0; i < PATTERNS.length; i++) {const pattern = PATTERNS[i];const substring = input.substring(index);const result = substring.match(pattern[0]);if (result !== null) {index += push(token_stream, new Token(pattern[1], result[0]));continue outer;}}index += push(token_stream, new Token("unknown", input.substring(index, index + 1)));}return token_stream;}function highlight(source) {const input = source.textContent;if (input === null) {return;}const token_stream = lex(input);source.classList.add("go-source");source.replaceChildren();for (let i = 0; i < token_stream.length; i++) {const token = token_stream[i];const token_element = document.createElement("span");token_element.textContent = token.slice;token_element.classList.add("token", token.kind);if (token.kind === "whitespace") {token_element.textContent = token.slice.replace(/\r/g, "");}if (token.kind === "identifier") {if (i + 1 < token_stream.length && token_stream[i + 1].equals("operator", "(")) {token_element.classList.add("function");}else if (i - 1 > 0 && token_stream[i - 1].equals("keyword", "func")) {token_element.classList.add("function");}}source.append(token_element);}}const state = {slides: [], index: 0,key_lock: false,playgrounds: [],progresses: [],};function main() {state.slides = [].slice.call(document.querySelectorAll(".slide"));if (state.slides.length === 0) {alert("Empty!");return;}for (let i = 0; i < state.slides.length; i++) {const page_number = state.slides[i].querySelector('.page-number');if (page_number !== null) {page_number.textContent = `${i + 1}`;}}setup_code_blocks();const playgrounds = document.querySelectorAll(".playground");for (let i = 0; i < playgrounds.length; i++) {state.playgrounds.push({input: playgrounds[i].querySelector(".input"),args: playgrounds[i].querySelector(".args"),submit: playgrounds[i].querySelector(".submit"),output: playgrounds[i].querySelector(".output"),});state.playgrounds[i].input.contentEditable = "plaintext-only";state.playgrounds[i].input.addEventListener("keydown", on_input_keydown);playgrounds[i].addEventListener("focusin", evt => { state.key_lock = true; });playgrounds[i].addEventListener("focusout", evt => { state.key_lock = false; });state.playgrounds[i].submit.addEventListener("click", () => {on_run(state.playgrounds[i]);});playgrounds[i].addEventListener("keydown", evt => {const kbevt = evt;if (kbevt.key === "Enter" && kbevt.ctrlKey) {on_run(state.playgrounds[i]);}});}const progresses = document.querySelectorAll("progress");for (let i = 0; i < progresses.length; i++) {state.progresses.push(progresses[i]);progresses[i].max = state.slides.length;progresses[i].addEventListener("click", on_progress_bar_click);}const index = localStorage.getItem("slide index");change_to(index !== null ? Number.parseInt(index) : 0);window.addEventListener("keydown", on_arrow_keydown);}function setup_code_blocks() {const code_blocks = document.querySelectorAll("code");for (let i = 0; i < code_blocks.length; i++) {highlight(code_blocks[i]);code_blocks[i].addEventListener("input", on_code_input);}}async function load_source_file(filename) {try {const response = await fetch(filename);if (!response.ok) {return "";}return await response.text();}catch (error) {return "";}}function change_to(index) {state.index = Math.max(0, Math.min(index, state.slides.length - 1));for (let i = 0; i < state.slides.length; i++) {state.slides[i].classList.remove("current");}state.slides[state.index].classList.add("current");state.progresses.forEach(p => {p.value = state.index + 1;});localStorage.setItem("slide index", `${state.index}`);}function on_progress_bar_click(evt) {const ratio = evt.offsetX / evt.target.clientWidth;const index = Math.floor(state.slides.length * ratio);change_to(index);}function on_arrow_keydown(evt) {if (state.key_lock && ["ArrowUp","ArrowLeft","ArrowDown","ArrowRight","Home","End",].includes(evt.key)) {return;}switch (evt.key) {case "PageUp":case "ArrowUp":case "ArrowLeft":{evt.preventDefault();change_to(state.index - 1);}break;case "PageDown":case "ArrowDown":case "ArrowRight":{evt.preventDefault();change_to(state.index + 1);}break;case "Home":{change_to(0);}break;case "End":{change_to(state.slides.length - 1);}break;}}function on_input_keydown(evt) {if (evt.key !== "Tab") {return}evt.preventDefault();const selection = window.getSelection();if (selection === null || selection.rangeCount <= 0) {return;}const range = selection.getRangeAt(0);const tab = document.createTextNode("\t");range.insertNode(tab);range.setStartAfter(tab);range.setEndAfter(tab);selection.removeAllRanges();selection.addRange(range);}function on_run(playground) {const anchor = document.createElement("a");anchor.href = "https://github.com/alan-b-lima/pl-go?tab=readme-ov-file#running-the-project";anchor.textContent = "o README do projeto";anchor.style.color = "#00acd7";playground.output.replaceChildren();playground.output.append("Você está na versão estática da página, ","não é possível rodar código aqui, confira ",anchor," para mais informações em como rodar código.");}function on_code_input(evt) {const inevt = evt;const target = inevt.target;const selection = window.getSelection();if (selection === null || selection.rangeCount <= 0) {return;}const range = selection.getRangeAt(0);if (!target.contains(range.startContainer)) {return;}const pre_caret_range = range.cloneRange();pre_caret_range.selectNodeContents(target);pre_caret_range.setEnd(range.startContainer, range.startOffset);const cursor_offset = pre_caret_range.toString().length;highlight(target);let input_offset = 0;for (let i = 0; i < target.childNodes.length; i++) {const node = target.childNodes[i].firstChild;if (!(node instanceof Text)) {console.error("bad node");return;}const next_input_offset = input_offset + node.length;if (cursor_offset > next_input_offset) {input_offset = next_input_offset;continue;}const selection = window.getSelection();if (selection === null) {return;}const range = document.createRange();range.setStart(node, cursor_offset - input_offset);range.collapse(true);selection.removeAllRanges();selection.addRange(range);return;}}window.addEventListener("load", main);